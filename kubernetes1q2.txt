apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  clusterIP: None
  ports:
    - port: 80
      name: web
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx-statefulset
  labels:
    app: nginx
spec:
  replicas: 2
  serviceName: nginx
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      name: nginx-pod
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: my-volume
              mountPath: /usr/share/nginx/html

  volumeClaimTemplates:
    - metadata:
       name: my-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi


===================================================================
Rolling updates
========================
This feature is used to update from one version to another without downtime

Create deployment with nginx:1.24 and upgrade to nginx:1.25

vim deployment1.yml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    type: proxy
    author: intelliqit
spec:
  replicas: 2
 
  selector:
    matchLabels:
      type: proxy
  template:
    metadata:
      name: nginx-pod
      labels:
        type: proxy
    spec:
      containers:
        - name: nginx
          image: nginx:1.24
          ports:
            - containerPort: 80
              hostPort: 9090

Create deployment from the above file
kubectl apply -f deployment1.yml

Check which version it is working on
kubectl describe deployment nginx-deployment | less

Upgrade to nginx:1.25 version
kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1

Check which version it is working on
kubectl describe deployment nginx-deployment | less
================================================================================================
Recreate update strategy
=============================
In the scenario it initially remove the older versions and replaces it with new versions

vim deployment1.yml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    type: proxy
    author: intelliqit
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      type: proxy
  template:
    metadata:
      name: nginx-pod
      labels:
        type: proxy
    spec:
      containers:
        - name: nginx
          image: nginx:1.24
          ports:
            - containerPort: 80
              hostPort: 9090
...

Create a deployment from the above file
kubectl apply -f deployment1.yml

Upgrade to  higher version
kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1

==============================================================================